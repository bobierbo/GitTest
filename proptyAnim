补间动画(Tween Animation)
a. 渐变动画支持四种类型：平移（Translate）、旋转（Rotate）、缩放（Scale）、不透明度（Alpha）。
b. 只是显示的位置变动，View的实际位置未改变，表现为View移动到其他地方，点击事件仍在原处才能响应。
c. 组合使用步骤较复杂。
d. View Animation 也是指此动画。

帧动画(Frame Animation)
a. 用于生成连续的Gif效果图。
b. DrawableAnimation也是指此动画。

属性动画(Property Animation)
a. 支持对所有View能更新的属性的动画（需要属性的setXxx()和getXxx()）。
b. 更改的是View实际的属性，所以不会影响其在动画执行后所在位置的正常使用。
c. Android3.0 （API11）及以后出现的功能，3.0之前的版本可使用github第三方开源库nineoldandroids.jar进行支持。


常用API
ObjectAnimator ：对象动画执行类。
PropertyValuesHolder : 属性存储器，为两个执行类提供更新多个属性的功能。
AnimatorListener ：动画执行监听，在动画开始、重复、结束、取消时进行回调。
Keyframe ：为 PropertyValuesHolder提供多个关键帧的操作值。
AnimatorSet ：一组动画的执行集合类：设置执行的先后顺序，时间等。
TimeInterpolator ：时间插值，用于控制动画执行过程。
ValueAnimator ：值动画执行类，常配合AnimatorUpdateListener使用。
AnimatorUpdateListener ：动画更新监听。
TypeEvaluator ：类型估值，用于设置复杂的动画操作属性的值。

Interpolator 加速度插值器，各种动画加速度

1）translationX 和 translationY：这两个属性控制了View所处的位置，它们的值是由layout容器设置的，是相对于坐标原点（0，0左上角）的一个偏移量。
2）rotation, rotationX 和 rotationY：控制View绕着轴点（pivotX和pivotY）旋转。
3）scaleX 和 scaleY：控制View基于pivotX和pivotY的缩放。
4）pivotX 和 pivotY：旋转的轴点和缩放的基准点，默认是View的中心点。
5）x 和 y：描述了view在其父容器中的最终位置，是左上角左标和偏移量（translationX，translationY）的和。
6）aplha：透明度，1是完全不透明，0是完全透明。


ObjectAnimator继承ValueAnimator继承Animator
ValueAnimator只不过是对值进行了一个平滑的动画过渡，但我们实际使用到这种功能的场景好像并不多。只有自定义动画轨迹等复杂动画时才用
而ObjectAnimator则就不同了，它是可以直接对任意对象的任意属性进行动画操作的，通常四种动画属性操作用到

AnimatorSet可以通过playTogether执行多个Animator，AnimatorSet也可以通过with, before,after方法设置动画执行顺序

当一个view同时执行多个动画属性时用PropertyValuesHolder,
当多个view同时执行动画时用AnimatorSet


